import streamlit as st
import subprocess
import os
from PIL import Image

# Streamlit app
st.title("Fine-tuned YOLOv7")

uploaded_file = st.file_uploader("Choose an image...", type=["jpg", "jpeg", "png"])

if uploaded_file is not None:
    image = Image.open(uploaded_file)
    st.image(image, caption='Uploaded Image.', use_column_width=True)
    st.write("")
    st.write("Classifying...")

    # Save the uploaded image to a temporary file
    temp_image_path = "temp_uploaded_image.jpg"
    image.save(temp_image_path)

    # Display loading spinner
    with st.spinner('Wait for it...'):
        # Run the detect.py script with subprocess
        result = subprocess.run(
            [
                "python",
                "C:/Users/user/Downloads/projects/MBG-YOLOv7/yolov7/detect.py",
                "--source", temp_image_path,
                "--weights", "C:/Users/user/Downloads/projects/MBG-YOLOv7/yolov7/runs/train/yolov714/weights/best.pt", 
                "--conf", "0.25"
            ],
            capture_output=True,
            text=True
        )

        # Check if the command was successful
        if result.returncode == 0:
            st.success('Classification done!')

            # Assuming detect.py saves the result in a known location, load and display the result image
            # Update with the actual path to the result image generated by detect.py
            result_dir = "C:/Users/user/Downloads/projects/MBG-YOLOv7/yolov7/runs/detect/exp"
            result_image_path = os.path.join(result_dir, os.listdir(result_dir)[0])  # Assuming only one result in the directory

            if os.path.exists(result_image_path):
                result_image = Image.open(result_image_path)
                st.image(result_image, caption='Processed Image.', use_column_width=True)
            else:
                st.error('Error: Result image not found.')

        else:
            st.error('Error in running YOLOv7 detection script.')
            st.error(result.stderr)

    # Clean up the temporary image file
    os.remove(temp_image_path)
